function geojson_popup(event_name) {
  // takes path to geojson file, which can be found for a given event by found
  var path = overlay_res['events/'+ event_name + "/"].geojson
  $.getJSON(path, function(data){
    var object_layer = L.geoJson(data).addTo(map);
    var selector = "[data='" + event_name + "']";
    $(selector)[0].gjobject = object_layer;
  })//, function(data, event_name){
  //});
}

popup_text = function(uid){
  var popup = $('#popup-text')
  $.ajax({
    type: 'GET',
    url: 'events/'+ uid +'/',
    timeout: 5000,
    success: function(data) {

      var eventdata = overlay_res['events/'+uid+'/'];

      // Clean up event html
      var content_start = data.indexOf('<p>');
      var content_finish = data.lastIndexOf('</p>') + "</p>".length;

      var res = eventdata.resources;
      var moreinfo = "";

      // Fetch Event cover and display
      if(eventdata.cover != "") {
        $(".cover").attr('src', eventdata.cover);
        $(".cover").show();
      } else {
        $(".cover").hide();
      }

      // Build header
      $("#popup-year").text(eventdata.year);
      $("#popup-title").text(eventdata.title);



      if(res.length > 0){
        moreinfo = "<p><a class='event-"+ uid + "' href='#" + uid + "'>Click for more info</a></p>"
      }
      var contents = data.substring(content_start, content_finish) + moreinfo;

      $("#popup-text").html(contents);
      $("#popup").fadeIn();
      var more_info_link = $(".event-"+uid);
      more_info_link.magnificPopup({
        items:res,
        gallery: {
          enabled: true
        },
        type: 'image'
      });
    },
    error: function(XMLHttpRequest, textStatus, errorThrown) {}
  });
  return popup;
}

overlay_res = {
<%event_res_builder.each do |event|%>
  <%path = event.path.gsub(".html","/")%>
  "<%=path%>":{
    title: "<%=event.metadata[:page]["title"]%>",
    year: "<%=event.metadata[:page]["start"]%>",
    resources: [
    <%resources = sitemap.resources.select{|resource| resource.path.start_with?(path)}%>
    <%resources.each do |resource| %>
      <%url = resource.path%>
      <%if File.basename(resource.path).start_with?('cover') then next %>
      <%elsif ['.jpg','.jpeg','.png','.gif','.svg'].include? resource.ext.downcase%>
        <%res_type = "image"%>
      <%elsif resource.ext.downcase == ".pdf"%>
        <%res_type = "inline"%>
        <%url = "<div class='embeddedpdf'><embed src='"+url+"' type='application/pdf'></div>"%>
      <%else next%>
      <%end%>
      {
      src: "<%=url%>",
      type: "<%=res_type%>"
      },
    <%end%>
    ],
    geojson:
    <%if gj = resources.select{|resource| resource.ext.downcase == '.geojson'}.first%>
      '<%=gj.path%>',
    <%else%>
      '',
    <%end%>
    cover:
    <%if cover = resources.select{|resource| File.basename(resource.path).start_with?('cover')}.first%>
      '<%=cover.path%>'
    <%else%>
      ''
    <%end%>
  },
<%end%>
}
