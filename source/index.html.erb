---
title: Hulme History
---
<div id="map-wrapper">
  <nav id='menu-ui' class='menu-ui'></nav>

  <section id='timeline-section'>
    <div id='timeline'>
      <div id='tl-content'>
        <div id='crossbar'> </div>
        <ol class="decades">
          <% timeline = all_events(1860, 2015) %>
          <% timeline.each do |decade, events| %>
            <li class="decade" value="<%= decade %>">
              <time class="decade"><%= decade %></time>
              <% if events.length > 0 %>
                <ol class="events">
                <% events.sort_by{|event| event.metadata[:page]["start"]}.each do |event| %>
                  <% md = event.metadata[:page] %>
                  <li class="event item block <%= md["timeline"] %>"
                      lat="<%=md['lat']%>"
                      lng="<%=md['lng']%>"
                      data="<%=event.path.split('/')[-1].split('.')[0]%>"
                      value="<%= md["start"] %>">
                      <strong><%= md["title"] %></strong><%= ". " + md["desc"] if md["desc"] %>
                  </li>
                <% end %>
                </ol>
              <% end %>
            </li>
          <% end %>
        </ol>
      </div>
    </div>
    <div id='listholder'>
      <ol class="button-group">
      </ol>
    </div>
  </section>

  <section id='popup-data'>
    <div id='popup'>
      <div id='cover'>
        <img class="cover" src="">
      </div>
      <div id='popup-header'>
        <strong>
          <span id='popup-year'> </span>
          <span id='popup-title'> </span>
        </strong>
      </div>
      <div id="popup-text">
      </div>
    </div>
  </section>

  <section id='map'></section>
</div>

<script>
// SET PANNING RANGE HERE
var northeast = L.latLng(53.495634,-2.32168);
var southwest = L.latLng(53.455451,-2.223401);

if(southwest && northeast) {
  bounds = L.latLngBounds(southwest, northeast);
} else {
  bounds = null;
}

var mapopts = {
  center: [53.468,-2.260],
  minZoom: 15,
  zoom:15,
  maxZoon: 19,
  maxBounds: bounds
}

L.mapbox.accessToken = 'pk.eyJ1Ijoia2ltYWRhY3R5bCIsImEiOiJCYzdNTTR3In0.hkjyGpEFYdSPrVp3e717eA';
var map = L.map('map', mapopts);

  // { maxBounds: bounds,
  //   maxZoom:19,
  //   minZoom:11
  // });
var layers = document.getElementById('menu-ui');

// Colour defs
var buildings = "#7FBB71";
var blocks = "#CDCCCC";

// Base map
var old_map = L.mapbox.tileLayer('mapbox.light');
var modern_map = L.mapbox.tileLayer('mapbox.wheatpaste');
addLayer(old_map, 'Base Map', 1);

// 1871 map layers
var group1871 = L.layerGroup();
addLayer(group1871, '1871', 2);
// Async load so that the styles work properly for now.
// Later we can edit the style info in the geojson directly.
$.getJSON('./gis/1871_figure_ground.geojson', function(data) {
  l = L.mapbox.featureLayer(data);
  l.addTo(group1871);
  l.setStyle({fillColor: buildings});
});

$.getJSON('./gis/1871_blocks.geojson', function(data) {
  l = L.mapbox.featureLayer(data);
  l.addTo(group1871);
  l.setStyle({fillColor: blocks});
});


// 1990 map layers
var group1990 = L.layerGroup();
//addLayer(group1990, '1990', 3);

$.getJSON('./gis/1990_figure_ground.geojson', function(data) {
  l = L.mapbox.featureLayer(data);
  l.addTo(group1990);
  l.setStyle({fillColor: buildings});
});

$.getJSON('./gis/1990_blocks.geojson', function(data) {
  l = L.mapbox.featureLayer(data);
  l.addTo(group1990);
  l.setStyle({fillColor: blocks});
});

// 2015 layers
var group2015 = L.layerGroup();
//addLayer(group2015, '2015', 4);

$.getJSON('./gis/2015_blocks.geojson', function(data) {
  l = L.mapbox.featureLayer(data);
  l.addTo(group2015);
  l.setStyle({fillColor: blocks});
});

//
map.present = group1871;

map.update = function() {
  current_year = parseInt($(".event.active").attr('value'));

  // Pick the appropriate map
  if(current_year < 1970){
    new_map = group1871;
  } else if(current_year < 1994) {
    new_map = group1990;
  } else {
    new_map = group2015;
  }

  // Do we need to change it?
  if(new_map != map.present){
    // map.present
    //     .getLayers()
    //     .forEach(function(l){
    //       // mess around with fading layer and then removing asynchronously.
    //       l.setStyle({'opacity':0});
    //     })
    if(map.hasLayer(map.present)){
      map.removeLayer(map.present);
    }
    if(new_map == group2015) {
      map.removeLayer(old_map);
      map.addLayer(modern_map);
    } else {
      map.removeLayer(modern_map);
      map.addLayer(old_map);
    }

    // Perhaps similarly mess with fade in. If fade out and in async, should dissolve.
    map.present = new_map;
    map.addLayer(new_map);
  }
}

//UGLY hack to set view to show map transition
trans_dec = $(".decade[value=1990]");
trans_year = $(".event[data='1994-hulme-guide-to-development']");
trans_pc = 100 * (trans_year[0].offsetTop - trans_dec[0].offsetTop) / trans_dec.height()
trans_dec.css('background', 'linear-gradient(to bottom, rgba(255,255,255,0) 0%,rgba(255,255,255,0.71) 65%,rgba(125,165,209,0.74)' + trans_pc + '%,rgba(125,165,209,1) 100%)')


function addLayer(layer, name, zIndex) {
  layer
  .setZIndex(zIndex)
  .addTo(map);

  // Create a simple layer switcher that
  // toggles layers on and off.
  var link = document.createElement('a');
  link.href = '#';
  link.className = 'active';
  link.innerHTML = name;

  link.onclick = function(e) {
    e.preventDefault();
    e.stopPropagation();

    if (map.hasLayer(layer)) {
      map.removeLayer(layer);
      this.className = '';
    } else {
      map.addLayer(layer);
      this.className = 'active';
    }
  };

  layers.appendChild(link);
}
$('#timeline').mousedown(timeline_mousedown);

$('#tl-content').scroll(timeline_scroll)

$("li.event.item").each(function(){
  this.activate = function(){
    elem = this;
    window.location.hash = this.attributes.data.value;
    $(elem).addClass("active");
    setTimeout(function(){
      // check if class is still active rather than just scrolling through.
      if (elem.classList.contains("active")){
        var attrs = elem.attributes;
        // var lat = attrs['lat'].value;
        // var lng = attrs['lng'].value;
        var data = attrs['data'].value;

        popup_text(data);

        if(!elem.gjobject && overlay_res['events/' + data + '/']) {
          geojson_popup(data);
        } else if (elem.gjobject) {
          elem.gjobject.addTo(map);
        }
      }
    }, 500);
  }
  this.deactivate = function(){
    if(this.gjobject) {
      // remove geojson object layer
      map.removeLayer(this.gjobject);
    }
    $(this).removeClass("active");
    $("#popup").fadeOut();
  }
});

$("li.event").click(function(){
  // fixme: maths is wrong.
  var scroll = s_p_inv(this.offsetTop);
  $("#tl-content").animate({scrollTop:scroll});
})

$(document).ready(function(){
  // taking string from internet route. Sanitise thoroughly.
  var target = window.location.hash.replace(/([^a-zA-Z\-\d])/g, '');
  if(target != "") {
    $('[data="'+target+'"]')[0].click();
  }
})

</script>
